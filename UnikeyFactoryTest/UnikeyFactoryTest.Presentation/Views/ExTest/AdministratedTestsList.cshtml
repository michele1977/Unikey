@using UnikeyFactoryTest.Presentation.Models.DTO
@model  UnikeyFactoryTest.Presentation.Models.AdministratedTestsListModel

@{
    ViewBag.Title = "TestsList";
}


<h2>AdministratedTests List</h2>

<hr />

<div>
    <form action="@Url.Action("TextSearch", "ExTest")" method="post">
        <div class="btn-group">
            <input id="searchinput" value="@Model.TextFilter" type="search" name="textFilter" class="form-control"
                   onsearch="@Url.Action("AdministratedTestsList", "ExTest", new {TextFilter = ""})">
            <span id="searchclear" class="glyphicon glyphicon-remove-circle"></span>
            <input type="submit" class="btn btn-primary" value="Search" />
        </div>
    </form>
</div>

<div id="pageSizeDropDownList">
    @Html.Label("Elements per page")
    <select name="PageSizeSelection" onchange="resizePage(this.value, @Model.PageNumber, '/ExTest/AdministratedTestsList?TextFilter=@Model.TextFilter&PageSize=');">
        <option value="@Model.PageSize" selected="selected">@Model.PageSize</option>
        @for (int i = 10; i <= 161; i *= 2)
        {
            if (Model.PageSize != i)
            {
                <option value="@i">@i</option>
            }

        }
    </select>
</div>

<table class="table">
    <tr>
        <th>Full Name</th>
        @*<th>Test title</th>*@
        <th>Date</th>
        <th>Total Score/Max Score</th>
        <th>Actions</th>
    </tr>

    @foreach (AdministratedTestDto item in Model.Tests)
    {
        <tr>
            <td>
                @item.TestSubject
            </td>
            <td>
                @item.Date
            </td>
            <td>
                @item.ResultScore/@item.TotalScore
            </td>
            <td>
                @Html.ActionLink(
                    "See test",
                    "AdministratedTestContent",
                    "ExTest",
                    new { @item.Id, @Model.PageNumber, @Model.PageSize, @Model.TextFilter },
                    new { @class = "btn btn-info" })
            </td>
        </tr>
    }

</table>

<div>
    @if (Model.PageNumber > 1)
    {
        @Html.ActionLink(
            "First",
            "AdministratedTestsList",
            "ExTest",
            new { PageNumber = 1, Model.PageSize, Model.TextFilter },
            new { @class = "btn btn-info" })
        @Html.ActionLink(
            "Previous",
            "AdministratedTestsList",
            "ExTest",
            new { PageNumber = Model.PageNumber - 1, Model.PageSize, Model.TextFilter },
            new { @class = "btn btn-info" })
    }
    <label>@Model.PageNumber of @Model.LastPage</label>
    @if (@Model.PageNumber != @Model.LastPage)
    {
        @Html.ActionLink(
            "Next",
            "AdministratedTestsList",
            "ExTest",
            new { PageNumber = Model.PageNumber + 1, Model.PageSize, Model.TextFilter },
            new { @class = "btn btn-info" })
        @Html.ActionLink(
            "Last",
            "AdministratedTestsList",
            "ExTest",
            new { PageNumber = Model.LastPage, Model.PageSize, Model.TextFilter },
            new { @class = "btn btn-info" })
    }
</div>

